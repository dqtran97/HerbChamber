//FirebaseESP8266.h must be included before ESP8266WiFi.h
#include "FirebaseESP8266.h"  // Install Firebase ESP8266 library
#include <ESP8266WiFi.h>
#include <DHT.h> //install DHT Library and Adafruit Unified Sensor Library
#include <SPI.h>
#include <Wire.h>
#include <BlynkSimpleEsp8266.h>

#define FIREBASE_HOST "sdp21-4b787.firebaseio.com/" //Without http:// or https:// schemes
#define FIREBASE_AUTH "Vw8ZlF4gKtPxfs4i0K7EWKMSVJpP6yvZFVWCwR2l"
#define WIFI_SSID "Galaxy10"
#define WIFI_PASSWORD "00000000"
#define DHTPIN 2   // Connect Data pin of DHT to D4
#define DHTTYPE DHT11
DHT dht(DHTPIN, DHTTYPE);
SimpleTimer timer;

#define BLYNK_AUTH "hLSCZBi8YLbREhb96i39ASKzR2-Z1uiE"
#define BLYNK_PRINT Serial

FirebaseData firebaseData; //Define FirebaseESP8266 data object
FirebaseJson json;

const int AirValue = 640;   //you need to replace this value with Value_1
const int WaterValue = 360;  //you need to replace this value with Value_2
const int sensorPin = A0;
int soilMoistureValue = 0;
int soilmoisturepercent = 0;
int sensorvalue = 0;
int outputvalue = 0;

void setup() {

  Serial.begin(9600);

  dht.begin();

  Blynk.begin(BLYNK_AUTH, WIFI_SSID, WIFI_PASSWORD);
  WiFi.begin(WIFI_SSID, WIFI_PASSWORD);
  Serial.print("Connecting to Wi-Fi");
  while (WiFi.status() != WL_CONNECTED)
  {
    Serial.print(".");
    delay(300);
  }
  Serial.println();
  Serial.print("Connected with IP: ");
  Serial.println(WiFi.localIP());
  Serial.println();

  Firebase.begin(FIREBASE_HOST, FIREBASE_AUTH);
  Firebase.reconnectWiFi(true);
  pinMode(sensorPin, INPUT);
  timer.setInterval(1000L, sensorUpdate);
}

void sensorUpdate() {

  // Reading temperature or humidity takes about 250 milliseconds!
  // Sensor readings may also be up to 2 seconds 'old' (its a very slow sensor)
  float h = dht.readHumidity();
  // Read temperature as Fahrenheit (the default)
  float f = dht.readTemperature();
  // Read temperature as Celsius (isCelsius = true)
  float t = dht.readTemperature(true);
  // Check if any reads failed and exit early (to try again).
  if (isnan(h) || isnan(t) || isnan(f)) {
    Serial.println(F("Failed to read from DHT sensor!"));
    return;
  }

  Serial.print(F("Humidity: "));
  Serial.print(h);
  Serial.print(F("%  Temperature: "));
  Serial.print(t);
  Serial.print(F("F  , "));
  Serial.print(F("Moisture: "));
  Serial.print(soilmoisturepercent);
  Serial.print("% , ");
  Serial.println(soilMoistureValue);
  
  Blynk.run();
  if (Firebase.setFloat(firebaseData, "/FirebaseIOT/temperature", t))
  {
    Serial.println("PASSED");
    Serial.println("PATH: " + firebaseData.dataPath());
    Serial.println("TYPE: " + firebaseData.dataType());
    Serial.println("ETag: " + firebaseData.ETag());
    Serial.println("------------------------------------");
    Serial.println();
  }
  else
  {
    Serial.println("FAILED");
    Serial.println("REASON: " + firebaseData.errorReason());
    Serial.println("------------------------------------");
    Serial.println();
  }

  if (Firebase.setFloat(firebaseData, "/FirebaseIOT/humidity", h))
  {
    Serial.println("PASSED");
    Serial.println("PATH: " + firebaseData.dataPath());
    Serial.println("TYPE: " + firebaseData.dataType());
    Serial.println("ETag: " + firebaseData.ETag());
    Serial.println("------------------------------------");
    Serial.println();
  }
  else
  {
    Serial.println("FAILED");
    Serial.println("REASON: " + firebaseData.errorReason());
    Serial.println("------------------------------------");
    Serial.println();
  }
  
  if (soilmoisturepercent >= 100)
  {
    Serial.println("100 %");
  }
  else if (soilmoisturepercent <= 0)
  {
    Serial.println("0 %");
  }
  else if (soilmoisturepercent > 0 && soilmoisturepercent < 100)
  {
    if (Firebase.setFloat(firebaseData, "/FirebaseIOT/moisture", soilmoisturepercent))
    {
      Serial.println("PASSED");
      Serial.println("PATH: " + firebaseData.dataPath());
      Serial.println("TYPE: " + firebaseData.dataType());
      Serial.println("ETag: " + firebaseData.ETag());
      Serial.println("------------------------------------");
      Serial.println();
    }
    else
    {
      Serial.println("FAILED");
      Serial.println("REASON: " + firebaseData.errorReason());
      Serial.println("------------------------------------");
      Serial.println();
    }
  }

  Blynk.virtualWrite(V1, soilmoisturepercent);
  Blynk.virtualWrite(V5, h);
  Blynk.virtualWrite(V6, t);

  soilMoistureValue = analogRead(sensorPin);  //put Sensor insert into soil
  soilmoisturepercent = map(soilMoistureValue, AirValue, WaterValue, 0, 100); 
  
  if(soilmoisturepercent > 35)
  {
       Blynk.notify("soil is in optimal conditions, no need to water your plants");
       delay(600); 
  }
  else if(soilmoisturepercent < 30)
  {
       Blynk.notify("soil is not wet enought, please water your plant");
       delay(600);
  }
  
}

void loop() {
  
  sensorUpdate();
  Blynk.run(); // Initiates Blynk
  timer.run(); // Initiates SimpleTimer
  delay(2000);
}



/* ignore this, not working correctly with the current libraries available with firebasearduino.h


//FirebaseESP8266.h must be included before ESP8266WiFi.h
#include "FirebaseESP8266.h"  // Install Firebase ESP8266 library
#include <ESP8266WiFi.h>
#include <DHT.h> //install DHT Library and Adafruit Unified Sensor Library
#include <SPI.h>
#include <Wire.h>

#define FIREBASE_HOST "sdp21-4b787.firebaseio.com/" //Without http://  schemes
#define FIREBASE_AUTH "Vw8ZlF4gKtPxfs4i0K7EWKMSVJpP6yvZFVWCwR2l"  // In database secrets in project setting for firbase server
#define WIFI_SSID "Galaxy10"  // wifi name that your connecting to
#define WIFI_PASSWORD "00000000"  // password for wifi ssid above
#define DHTPIN 4   // Connect Data pin of DHT to D2
#define DHTTYPE DHT11

DHT dht(DHTPIN, DHTTYPE);
FirebaseData firebaseData; //Define FirebaseESP8266 data object
FirebaseJson json;

const int AirValue = 640;   // test values in air contact to collaborate
const int WaterValue = 360;  // test values in water contact to collaborate
const int SensorPin = A0; 
int soilMoistureValue = 0;
int soilmoisturepercent = 0;

void setup() {

  Serial.begin(9600);

  dht.begin();

  WiFi.begin(WIFI_SSID, WIFI_PASSWORD);
  Serial.print("Connecting to Wi-Fi");
  while (WiFi.status() != WL_CONNECTED)
  {
    Serial.print(".");
    delay(300);
  }
  Serial.println();
  Serial.print("Connected with IP: ");
  Serial.println(WiFi.localIP());
  Serial.println();

  Firebase.begin(FIREBASE_HOST, FIREBASE_AUTH);
  Firebase.reconnectWiFi(true);

}

void sensorUpdate() {

  // Reading temperature or humidity takes about 250 milliseconds!
  // Sensor readings may also be up to 2 seconds 'old' (its a very slow sensor)
  float h = dht.readHumidity();
  // Read temperature as Fahrenheit (the default)
  float f = dht.readTemperature();
  // Read temperature as Celsius (isCelsius = true)
  float t = dht.readTemperature(true);

  // Check if any reads failed and exit early (to try again).
  if (isnan(h) || isnan(t) || isnan(f)) {
    Serial.println(F("Failed to read from DHT sensor!"));
    return;
  }

  Serial.print(F("Humidity: "));
  Serial.print(h);
  Serial.print(F("%  Temperature: "));
  Serial.print(t);
  Serial.print(F("F  ,"));
  Serial.print(f);
  Serial.println(F("C  "));
  Serial.print(F("Moisture: "));
  Serial.print(soilmoisturepercent);
  Serial.print("% ,");
  Serial.println(soilMoistureValue);


  if (Firebase.setFloat(firebaseData, "/FirebaseIOT/temperature", t))
  {
    Serial.println("PASSED");
    Serial.println("PATH: " + firebaseData.dataPath());
    Serial.println("TYPE: " + firebaseData.dataType());
    Serial.println("ETag: " + firebaseData.ETag());
    Serial.println("------------------------------------");
    Serial.println();
  }
  else
  {
    Serial.println("FAILED");
    Serial.println("REASON: " + firebaseData.errorReason());
    Serial.println("------------------------------------");
    Serial.println();
  }

  if (Firebase.setFloat(firebaseData, "/FirebaseIOT/humidity", h))
  {
    Serial.println("PASSED");
    Serial.println("PATH: " + firebaseData.dataPath());
    Serial.println("TYPE: " + firebaseData.dataType());
    Serial.println("ETag: " + firebaseData.ETag());
    Serial.println("------------------------------------");
    Serial.println();
  }
  else
  {
    Serial.println("FAILED");
    Serial.println("REASON: " + firebaseData.errorReason());
    Serial.println("------------------------------------");
    Serial.println();
  }

  soilMoistureValue = analogRead(SensorPin);  //put Sensor insert into soil
  soilmoisturepercent = map(soilMoistureValue, AirValue, WaterValue, 0, 100);
  if (soilmoisturepercent >= 100)
  {
    Serial.println("100 %");
  }
  else if (soilmoisturepercent <= 0)
  {
    Serial.println("0 %");
  }
  else if (soilmoisturepercent > 0 && soilmoisturepercent < 100)
  {
    if (Firebase.setFloat(firebaseData, "/FirebaseIOT/moisture", soilmoisturepercent))
    {
      Serial.println("PASSED");
      Serial.println("PATH: " + firebaseData.dataPath());
      Serial.println("TYPE: " + firebaseData.dataType());
      Serial.println("ETag: " + firebaseData.ETag());
      Serial.println("------------------------------------");
      Serial.println();
    }
    else
    {
      Serial.println("FAILED");
      Serial.println("REASON: " + firebaseData.errorReason());
      Serial.println("------------------------------------");
      Serial.println();
    }
  }
}

void loop() {
  
  sensorUpdate();
  delay(2000);
}



#include <DHT.h>
#include <DHT_U.h>
#include <ESP8266WiFi.h>                 
#include <FirebaseArduino.h>                 
 
#define FIREBASE_HOST "sdp21-4b787.firebaseio.com.firebaseio.com"           // the project name address from firebase id
#define FIREBASE_AUTH "Vw8ZlF4gKtPxfs4i0K7EWKMSVJpP6yvZFVWCwR2l"            // the secret key generated from firebase
#define WIFI_SSID "Galaxy10"                                  
#define WIFI_PASSWORD "00000000"            
 
#define DHTPIN D4                                            // Digital pin connected to DHT11
#define DHTTYPE DHT11                                        // Initialize dht type as DHT 11
DHT(DHTPIN, DHTTYPE);                                                    
 
void setup() 
{
  Serial.begin(115200);
  dht.begin();                                                  //reads dht sensor data 
               
  WiFi.begin(WIFI_SSID, WIFI_PASSWORD);                                  
  Serial.print("Connecting to ");
  Serial.print(WIFI_SSID);
  while (WiFi.status() != WL_CONNECTED) {
    Serial.print(".");
    delay(500);
  }
 
  Serial.println();
  Serial.print("Connected");
  Serial.println(WIFI_SSID);
  Serial.print("IP Address: ");
  Serial.println(WiFi.localIP());                               //prints local IP address
  Firebase.begin(FIREBASE_HOST, FIREBASE_AUTH);                 // connect to the firebase
 
}
 
void loop() 
{
  float h = dht.readHumidity();                                 // Read Humidity
  float t = dht.readTemperature();                              // Read temperature
    
  if (isnan(h) || isnan(t))                                     // Checking sensor working
  {                                   
    Serial.println(F("Failed to read from DHT sensor!"));
    return;
  } 
  Serial.print("Humidity: ");  
  Serial.print(h);
  String fireHumid = String(h) + String("%");                   //Humidity integer to string conversion
  
  Serial.print("%  Temperature: ");  
  Serial.print(t);  
  Serial.println("°C ");
  String fireTemp = String(t) + String("°C");                  //Temperature integer to string conversion
  delay(5000);
 
 
  Firebase.pushString("/DHT11/Humidity", fireHumid);            //setup path to send Humidity readings
  Firebase.pushString("/DHT11/Temperature", fireTemp);         //setup path to send Temperature readings
    if (Firebase.failed()) 
    {
 
      Serial.print("pushing /logs failed:");
      Serial.println(Firebase.error()); 
      return;
  }


  /*
  void loop() { 


  // Firebase Error Handling ************************************************
 if (Firebase.failed())
  { delay(500);
    Firebase.begin(FIREBASE_HOST, FIREBASE_AUTH);
    Serial.println(Firebase.error());
  Serial.println("Ignoring firebase\n\n\n\n\n");
  delay(500);
  }

  else {
    Serial.println("Everything is ready!");
    delay(300); Serial.println("Everything is ready!");
    delay(300); Serial.println("Everything is ready!");
    delay(300);
  }


  
  float h = dht.readHumidity();                                              // Reading humidity
  float t = dht.readTemperature();                                           // Reading temperature
    
  if (isnan(h) || isnan(t)) {                                                // Check if any reads failed and exit early (to try again).
    Serial.println("Failed to read from DHT sensor!");
    return;
  }

Serial.print("Current humidity = ");
    Serial.print(h);
    Serial.print("%  ");
    Serial.print("temperature = ");
    Serial.print(t); 
    Serial.println("C  ");
  delay(2000 );

  Firebase.setFloat("/data",t);
}
  
  */
}
*/
